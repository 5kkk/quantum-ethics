%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Samstag, 30. Oktober 2010 12.25 Uhr CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
1.00000 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
0 0 0 RG
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
1.00000 0 0 RG
0 J
1 j
q
q
[ 2.00000 5.00000 ] 0 d
48.0000 6.01576 339.493 376.484 rc
newpath
49.0000 26.0793 m
49.1682 26.1932 l
50.6824 27.4579 l
52.3649 29.3664 l
54.0474 31.7957 l
55.7298 34.7322 l
57.4123 38.1586 l
59.0948 42.0539 l
60.7772 46.3938 l
62.4597 51.1513 l
64.1422 56.2968 l
65.8246 61.7991 l
82.6493 129.166 l
84.3318 136.444 l
86.0142 143.710 l
87.6967 150.943 l
89.3792 158.123 l
91.0616 165.230 l
92.7441 172.249 l
94.4266 179.166 l
96.1090 185.966 l
97.7915 192.638 l
99.4740 199.174 l
116.298 255.698 l
133.123 295.462 l
149.948 320.928 l
166.772 335.814 l
183.597 343.389 l
200.422 346.102 l
217.246 345.664 l
234.071 343.230 l
250.896 339.573 l
267.720 335.203 l
284.545 330.453 l
301.370 325.544 l
318.194 320.618 l
335.019 315.765 l
351.844 311.042 l
368.668 306.483 l
385.493 302.106 l
469.616 283.052 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
[ 15.0000 5.00000 ] 0 d
48.0000 6.01576 339.493 376.484 rc
newpath
49.0000 35.5267 m
49.1682 35.5665 l
50.6824 36.2248 l
52.3649 37.5831 l
54.0474 39.5878 l
55.7298 42.2174 l
57.4123 45.4437 l
59.0948 49.2330 l
60.7772 53.5472 l
62.4597 58.3443 l
64.1422 63.5808 l
65.8246 69.2117 l
82.6493 137.938 l
99.4740 207.749 l
116.298 263.618 l
133.123 303.126 l
149.948 328.759 l
166.772 344.027 l
183.597 352.026 l
200.422 355.110 l
217.246 354.950 l
385.493 310.803 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
48.0000 6.01576 339.493 376.484 rc
newpath
49.0000 36.6994 m
49.1682 36.7193 l
50.6824 37.2229 l
52.3649 38.4592 l
54.0474 40.3899 l
55.7298 42.9874 l
57.4123 46.2150 l
59.0948 50.0306 l
60.7772 54.3873 l
62.4597 59.2362 l
64.1422 64.5271 l
65.8246 70.2103 l
82.6493 139.037 l
99.4740 208.577 l
116.298 264.328 l
133.123 303.924 l
149.948 329.767 l
166.772 345.287 l
183.597 353.531 l
200.422 356.824 l
217.246 356.833 l
234.071 354.710 l
250.896 351.240 l
267.720 346.952 l
284.545 342.203 l
301.370 337.231 l
318.194 332.192 l
335.019 327.192 l
351.844 322.295 l
368.668 317.544 l
385.493 312.964 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
0 0 0 RG
q
newpath
352.000 168.000 m
352.000 171.000 l
S
newpath
369.000 168.000 m
369.000 171.000 l
S
newpath
318.000 168.000 m
318.000 171.000 l
S
newpath
335.000 168.000 m
335.000 171.000 l
S
newpath
251.000 168.000 m
251.000 171.000 l
S
newpath
268.000 168.000 m
268.000 171.000 l
S
newpath
285.000 168.000 m
285.000 171.000 l
S
newpath
200.000 168.000 m
200.000 171.000 l
S
newpath
234.000 168.000 m
234.000 171.000 l
S
newpath
150.000 168.000 m
150.000 171.000 l
S
newpath
167.000 168.000 m
167.000 171.000 l
S
newpath
184.000 168.000 m
184.000 171.000 l
S
newpath
99.0000 168.000 m
99.0000 171.000 l
S
newpath
116.000 168.000 m
116.000 171.000 l
S
newpath
66.0000 168.000 m
66.0000 171.000 l
S
newpath
83.0000 168.000 m
83.0000 171.000 l
S
newpath
49.0000 168.000 m
385.493 168.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
213 191 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
49.0000 168.000 m
49.0000 173.000 l
S
Q
q
newpath
133.000 168.000 m
133.000 173.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
130.469 187.747 m
130.469 186.765 130.617 185.920 130.914 185.211  c
131.210 184.502 131.603 183.974 132.094 183.627  c
132.475 183.352 132.869 183.214 133.275 183.214  c
133.935 183.214 134.528 183.551 135.052 184.224  c
135.708 185.057 136.036 186.187 136.036 187.613  c
136.036 188.612 135.892 189.460 135.605 190.159  c
135.317 190.857 134.950 191.364 134.503 191.679  c
134.057 191.994 133.626 192.152 133.211 192.152  c
132.391 192.152 131.707 191.667 131.161 190.698  c
130.700 189.882 130.469 188.898 130.469 187.747  c
h
131.713 187.905 m
131.713 189.090 131.859 190.057 132.151 190.806  c
132.393 191.437 132.752 191.752 133.231 191.752  c
133.459 191.752 133.696 191.649 133.941 191.444  c
134.187 191.239 134.373 190.895 134.500 190.413  c
134.695 189.685 134.792 188.659 134.792 187.334  c
134.792 186.352 134.690 185.533 134.487 184.877  c
134.335 184.391 134.138 184.046 133.897 183.843  c
133.724 183.703 133.514 183.633 133.269 183.633  c
132.981 183.633 132.725 183.762 132.501 184.021  c
132.196 184.372 131.988 184.924 131.878 185.677  c
131.768 186.431 131.713 187.173 131.713 187.905  c
h
138.125 190.768 m
138.323 190.768 138.491 190.837 138.626 190.974  c
138.761 191.112 138.829 191.278 138.829 191.473  c
138.829 191.667 138.760 191.833 138.623 191.971  c
138.485 192.109 138.319 192.177 138.125 192.177  c
137.930 192.177 137.764 192.109 137.626 191.971  c
137.489 191.833 137.420 191.667 137.420 191.473  c
137.420 191.274 137.489 191.107 137.626 190.971  c
137.764 190.836 137.930 190.768 138.125 190.768  c
h
145.393 183.392 m
144.897 184.471 l
142.308 184.471 l
141.743 185.627 l
142.864 185.792 143.753 186.208 144.409 186.877  c
144.972 187.453 145.253 188.130 145.253 188.908  c
145.253 189.361 145.161 189.780 144.977 190.165  c
144.793 190.550 144.561 190.878 144.282 191.149  c
144.002 191.420 143.691 191.638 143.349 191.803  c
142.862 192.036 142.363 192.152 141.851 192.152  c
141.334 192.152 140.959 192.064 140.724 191.888  c
140.489 191.713 140.372 191.519 140.372 191.308  c
140.372 191.189 140.420 191.084 140.518 190.993  c
140.615 190.902 140.738 190.857 140.886 190.857  c
140.996 190.857 141.092 190.874 141.175 190.908  c
141.257 190.942 141.398 191.028 141.597 191.168  c
141.914 191.388 142.236 191.498 142.562 191.498  c
143.057 191.498 143.491 191.311 143.866 190.936  c
144.241 190.562 144.428 190.106 144.428 189.568  c
144.428 189.048 144.261 188.562 143.926 188.112  c
143.592 187.661 143.131 187.313 142.543 187.067  c
142.081 186.877 141.453 186.767 140.657 186.737  c
142.308 183.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
217.000 168.000 m
217.000 173.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
220.523 184.236 m
222.618 183.214 l
222.827 183.214 l
222.827 190.482 l
222.827 190.965 222.847 191.265 222.887 191.384  c
222.928 191.502 223.011 191.593 223.138 191.657  c
223.265 191.720 223.523 191.756 223.913 191.765  c
223.913 192.000 l
220.675 192.000 l
220.675 191.765 l
221.082 191.756 221.344 191.721 221.462 191.660  c
221.581 191.599 221.663 191.516 221.710 191.412  c
221.757 191.309 221.780 190.999 221.780 190.482  c
221.780 185.836 l
221.780 185.210 221.759 184.808 221.716 184.630  c
221.687 184.495 221.633 184.395 221.554 184.332  c
221.476 184.268 221.382 184.236 221.272 184.236  c
221.115 184.236 220.897 184.302 220.618 184.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
301.000 168.000 m
301.000 173.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
299.523 184.236 m
301.618 183.214 l
301.827 183.214 l
301.827 190.482 l
301.827 190.965 301.847 191.265 301.887 191.384  c
301.928 191.502 302.011 191.593 302.138 191.657  c
302.265 191.720 302.523 191.756 302.913 191.765  c
302.913 192.000 l
299.675 192.000 l
299.675 191.765 l
300.082 191.756 300.344 191.721 300.462 191.660  c
300.581 191.599 300.663 191.516 300.710 191.412  c
300.757 191.309 300.780 190.999 300.780 190.482  c
300.780 185.836 l
300.780 185.210 300.759 184.808 300.716 184.630  c
300.687 184.495 300.633 184.395 300.554 184.332  c
300.476 184.268 300.382 184.236 300.272 184.236  c
300.115 184.236 299.897 184.302 299.618 184.433  c
h
306.125 190.768 m
306.323 190.768 306.491 190.837 306.626 190.974  c
306.761 191.112 306.829 191.278 306.829 191.473  c
306.829 191.667 306.760 191.833 306.623 191.971  c
306.485 192.109 306.319 192.177 306.125 192.177  c
305.930 192.177 305.764 192.109 305.626 191.971  c
305.489 191.833 305.420 191.667 305.420 191.473  c
305.420 191.274 305.489 191.107 305.626 190.971  c
305.764 190.836 305.930 190.768 306.125 190.768  c
h
313.393 183.392 m
312.897 184.471 l
310.308 184.471 l
309.743 185.627 l
310.864 185.792 311.753 186.208 312.409 186.877  c
312.972 187.453 313.253 188.130 313.253 188.908  c
313.253 189.361 313.161 189.780 312.977 190.165  c
312.793 190.550 312.561 190.878 312.282 191.149  c
312.002 191.420 311.691 191.638 311.349 191.803  c
310.862 192.036 310.363 192.152 309.851 192.152  c
309.334 192.152 308.959 192.064 308.724 191.888  c
308.489 191.713 308.372 191.519 308.372 191.308  c
308.372 191.189 308.420 191.084 308.518 190.993  c
308.615 190.902 308.738 190.857 308.886 190.857  c
308.996 190.857 309.092 190.874 309.175 190.908  c
309.257 190.942 309.398 191.028 309.597 191.168  c
309.914 191.388 310.236 191.498 310.562 191.498  c
311.057 191.498 311.491 191.311 311.866 190.936  c
312.241 190.562 312.428 190.106 312.428 189.568  c
312.428 189.048 312.261 188.562 311.926 188.112  c
311.592 187.661 311.131 187.313 310.543 187.067  c
310.081 186.877 309.453 186.767 308.657 186.737  c
310.308 183.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
385.000 168.000 m
385.000 173.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
392.960 190.343 m
392.357 192.000 l
387.279 192.000 l
387.279 191.765 l
388.773 190.402 389.824 189.289 390.434 188.426  c
391.043 187.563 391.348 186.773 391.348 186.058  c
391.348 185.512 391.181 185.064 390.846 184.712  c
390.512 184.361 390.112 184.186 389.647 184.186  c
389.223 184.186 388.844 184.309 388.507 184.557  c
388.171 184.804 387.922 185.167 387.761 185.646  c
387.526 185.646 l
387.632 184.863 387.904 184.262 388.342 183.843  c
388.780 183.424 389.327 183.214 389.983 183.214  c
390.681 183.214 391.264 183.439 391.732 183.887  c
392.199 184.336 392.433 184.865 392.433 185.474  c
392.433 185.910 392.332 186.346 392.128 186.782  c
391.815 187.467 391.307 188.193 390.605 188.959  c
389.551 190.110 388.893 190.804 388.631 191.041  c
390.878 191.041 l
391.335 191.041 391.656 191.024 391.840 190.990  c
392.024 190.956 392.190 190.888 392.338 190.784  c
392.486 190.680 392.615 190.533 392.725 190.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
49.0000 88.0000 m
46.0000 88.0000 l
S
newpath
49.0000 35.0000 m
46.0000 35.0000 l
S
newpath
49.0000 141.000 m
46.0000 141.000 l
S
newpath
49.0000 248.000 m
46.0000 248.000 l
S
newpath
49.0000 195.000 m
46.0000 195.000 l
S
newpath
49.0000 355.000 m
46.0000 355.000 l
S
newpath
49.0000 301.000 m
46.0000 301.000 l
S
newpath
49.0000 381.500 m
49.0000 8.01577 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 81 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
49.0000 382.000 m
44.0000 382.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 380 7 13 rc
newpath
29.7900 387.438 m
21.2100 387.438 l
21.2100 386.762 l
29.7900 386.762 l
h
f
Q
newpath
28.4697 386.747 m
28.4697 385.765 28.6178 384.920 28.9140 384.211  c
29.2102 383.502 29.6038 382.974 30.0947 382.627  c
30.4755 382.352 30.8691 382.214 31.2753 382.214  c
31.9355 382.214 32.5279 382.551 33.0527 383.224  c
33.7086 384.057 34.0366 385.187 34.0366 386.613  c
34.0366 387.612 33.8927 388.460 33.6049 389.159  c
33.3172 389.857 32.9501 390.364 32.5036 390.679  c
32.0572 390.994 31.6266 391.152 31.2119 391.152  c
30.3909 391.152 29.7075 390.667 29.1616 389.698  c
28.7003 388.882 28.4697 387.898 28.4697 386.747  c
h
29.7138 386.905 m
29.7138 388.090 29.8598 389.057 30.1518 389.806  c
30.3930 390.437 30.7527 390.752 31.2309 390.752  c
31.4594 390.752 31.6964 390.649 31.9418 390.444  c
32.1873 390.239 32.3735 389.895 32.5004 389.413  c
32.6951 388.685 32.7924 387.659 32.7924 386.334  c
32.7924 385.352 32.6909 384.533 32.4877 383.877  c
32.3354 383.391 32.1386 383.046 31.8974 382.843  c
31.7239 382.703 31.5144 382.633 31.2690 382.633  c
30.9812 382.633 30.7252 382.762 30.5009 383.021  c
30.1962 383.372 29.9889 383.924 29.8789 384.677  c
29.7688 385.431 29.7138 386.173 29.7138 386.905  c
h
36.1250 389.768 m
36.3238 389.768 36.4910 389.837 36.6264 389.974  c
36.7618 390.112 36.8295 390.278 36.8295 390.473  c
36.8295 390.667 36.7608 390.833 36.6232 390.971  c
36.4857 391.109 36.3196 391.177 36.1250 391.177  c
35.9303 391.177 35.7642 391.109 35.6267 390.971  c
35.4891 390.833 35.4204 390.667 35.4204 390.473  c
35.4204 390.274 35.4891 390.107 35.6267 389.971  c
35.7642 389.836 35.9303 389.768 36.1250 389.768  c
h
43.7993 387.826 m
43.7993 388.727 l
42.6440 388.727 l
42.6440 391.000 l
41.5966 391.000 l
41.5966 388.727 l
37.9531 388.727 l
37.9531 387.915 l
41.9458 382.214 l
42.6440 382.214 l
42.6440 387.826 l
h
41.5966 387.826 m
41.5966 383.554 l
38.5752 387.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
49.0000 328.000 m
44.0000 328.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 327 7 13 rc
newpath
29.7900 334.438 m
21.2100 334.438 l
21.2100 333.762 l
29.7900 333.762 l
h
f
Q
newpath
28.4697 333.747 m
28.4697 332.765 28.6178 331.920 28.9140 331.211  c
29.2102 330.502 29.6038 329.974 30.0947 329.627  c
30.4755 329.352 30.8691 329.214 31.2753 329.214  c
31.9355 329.214 32.5279 329.551 33.0527 330.224  c
33.7086 331.057 34.0366 332.187 34.0366 333.613  c
34.0366 334.612 33.8927 335.460 33.6049 336.159  c
33.3172 336.857 32.9501 337.364 32.5036 337.679  c
32.0572 337.994 31.6266 338.152 31.2119 338.152  c
30.3909 338.152 29.7075 337.667 29.1616 336.698  c
28.7003 335.882 28.4697 334.898 28.4697 333.747  c
h
29.7138 333.905 m
29.7138 335.090 29.8598 336.057 30.1518 336.806  c
30.3930 337.437 30.7527 337.752 31.2309 337.752  c
31.4594 337.752 31.6964 337.649 31.9418 337.444  c
32.1873 337.239 32.3735 336.895 32.5004 336.413  c
32.6951 335.685 32.7924 334.659 32.7924 333.334  c
32.7924 332.352 32.6909 331.533 32.4877 330.877  c
32.3354 330.391 32.1386 330.046 31.8974 329.843  c
31.7239 329.703 31.5144 329.633 31.2690 329.633  c
30.9812 329.633 30.7252 329.762 30.5009 330.021  c
30.1962 330.372 29.9889 330.924 29.8789 331.677  c
29.7688 332.431 29.7138 333.173 29.7138 333.905  c
h
36.1250 336.768 m
36.3238 336.768 36.4910 336.837 36.6264 336.974  c
36.7618 337.112 36.8295 337.278 36.8295 337.473  c
36.8295 337.667 36.7608 337.833 36.6232 337.971  c
36.4857 338.109 36.3196 338.177 36.1250 338.177  c
35.9303 338.177 35.7642 338.109 35.6267 337.971  c
35.4891 337.833 35.4204 337.667 35.4204 337.473  c
35.4204 337.274 35.4891 337.107 35.6267 336.971  c
35.7642 336.836 35.9303 336.768 36.1250 336.768  c
h
38.4101 331.030 m
38.6556 330.450 38.9655 330.003 39.3400 329.687  c
39.7146 329.372 40.1811 329.214 40.7397 329.214  c
41.4295 329.214 41.9585 329.439 42.3266 329.887  c
42.6059 330.222 42.7456 330.579 42.7456 330.960  c
42.7456 331.586 42.3520 332.234 41.5649 332.902  c
42.0939 333.110 42.4938 333.406 42.7646 333.791  c
43.0354 334.176 43.1709 334.629 43.1709 335.149  c
43.1709 335.894 42.9339 336.540 42.4599 337.085  c
41.8421 337.796 40.9471 338.152 39.7749 338.152  c
39.1951 338.152 38.8005 338.080 38.5910 337.936  c
38.3815 337.792 38.2768 337.638 38.2768 337.473  c
38.2768 337.350 38.3265 337.242 38.4260 337.149  c
38.5254 337.056 38.6450 337.009 38.7846 337.009  c
38.8904 337.009 38.9983 337.026 39.1084 337.060  c
39.1803 337.081 39.3432 337.158 39.5971 337.292  c
39.8510 337.425 40.0266 337.504 40.1240 337.530  c
40.2806 337.576 40.4477 337.600 40.6254 337.600  c
41.0571 337.600 41.4327 337.432 41.7522 337.098  c
42.0717 336.764 42.2314 336.368 42.2314 335.911  c
42.2314 335.577 42.1573 335.251 42.0092 334.934  c
41.8992 334.697 41.7786 334.517 41.6474 334.394  c
41.4654 334.225 41.2158 334.071 40.8984 333.934  c
40.5810 333.796 40.2573 333.728 39.9272 333.728  c
39.7241 333.728 l
39.7241 333.537 l
40.0584 333.495 40.3938 333.374 40.7302 333.175  c
41.0666 332.976 41.3110 332.737 41.4633 332.458  c
41.6157 332.179 41.6918 331.872 41.6918 331.538  c
41.6918 331.102 41.5554 330.749 41.2824 330.481  c
41.0095 330.212 40.6699 330.078 40.2636 330.078  c
39.6077 330.078 39.0597 330.429 38.6196 331.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
49.0000 275.000 m
44.0000 275.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 273 7 13 rc
newpath
29.7900 280.438 m
21.2100 280.438 l
21.2100 279.762 l
29.7900 279.762 l
h
f
Q
newpath
28.4697 279.747 m
28.4697 278.765 28.6178 277.920 28.9140 277.211  c
29.2102 276.502 29.6038 275.974 30.0947 275.627  c
30.4755 275.352 30.8691 275.214 31.2753 275.214  c
31.9355 275.214 32.5279 275.551 33.0527 276.224  c
33.7086 277.057 34.0366 278.187 34.0366 279.613  c
34.0366 280.612 33.8927 281.460 33.6049 282.159  c
33.3172 282.857 32.9501 283.364 32.5036 283.679  c
32.0572 283.994 31.6266 284.152 31.2119 284.152  c
30.3909 284.152 29.7075 283.667 29.1616 282.698  c
28.7003 281.882 28.4697 280.898 28.4697 279.747  c
h
29.7138 279.905 m
29.7138 281.090 29.8598 282.057 30.1518 282.806  c
30.3930 283.437 30.7527 283.752 31.2309 283.752  c
31.4594 283.752 31.6964 283.649 31.9418 283.444  c
32.1873 283.239 32.3735 282.895 32.5004 282.413  c
32.6951 281.685 32.7924 280.659 32.7924 279.334  c
32.7924 278.352 32.6909 277.533 32.4877 276.877  c
32.3354 276.391 32.1386 276.046 31.8974 275.843  c
31.7239 275.703 31.5144 275.633 31.2690 275.633  c
30.9812 275.633 30.7252 275.762 30.5009 276.021  c
30.1962 276.372 29.9889 276.924 29.8789 277.677  c
29.7688 278.431 29.7138 279.173 29.7138 279.905  c
h
36.1250 282.768 m
36.3238 282.768 36.4910 282.837 36.6264 282.974  c
36.7618 283.112 36.8295 283.278 36.8295 283.473  c
36.8295 283.667 36.7608 283.833 36.6232 283.971  c
36.4857 284.109 36.3196 284.177 36.1250 284.177  c
35.9303 284.177 35.7642 284.109 35.6267 283.971  c
35.4891 283.833 35.4204 283.667 35.4204 283.473  c
35.4204 283.274 35.4891 283.107 35.6267 282.971  c
35.7642 282.836 35.9303 282.768 36.1250 282.768  c
h
43.7104 282.343 m
43.1074 284.000 l
38.0293 284.000 l
38.0293 283.765 l
39.5231 282.402 40.5747 281.289 41.1840 280.426  c
41.7934 279.563 42.0981 278.773 42.0981 278.058  c
42.0981 277.512 41.9309 277.064 41.5966 276.712  c
41.2623 276.361 40.8624 276.186 40.3969 276.186  c
39.9738 276.186 39.5939 276.309 39.2575 276.557  c
38.9211 276.804 38.6725 277.167 38.5117 277.646  c
38.2768 277.646 l
38.3826 276.863 38.6545 276.262 39.0925 275.843  c
39.5305 275.424 40.0774 275.214 40.7334 275.214  c
41.4316 275.214 42.0145 275.439 42.4821 275.887  c
42.9497 276.336 43.1835 276.865 43.1835 277.474  c
43.1835 277.910 43.0820 278.346 42.8789 278.782  c
42.5657 279.467 42.0579 280.193 41.3554 280.959  c
40.3017 282.110 39.6437 282.804 39.3813 283.041  c
41.6284 283.041 l
42.0854 283.041 42.4060 283.024 42.5900 282.990  c
42.7741 282.956 42.9402 282.888 43.0883 282.784  c
43.2364 282.680 43.3655 282.533 43.4755 282.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
49.0000 221.000 m
44.0000 221.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 220 7 13 rc
newpath
29.7900 227.438 m
21.2100 227.438 l
21.2100 226.762 l
29.7900 226.762 l
h
f
Q
newpath
28.4697 226.747 m
28.4697 225.765 28.6178 224.920 28.9140 224.211  c
29.2102 223.502 29.6038 222.974 30.0947 222.627  c
30.4755 222.352 30.8691 222.214 31.2753 222.214  c
31.9355 222.214 32.5279 222.551 33.0527 223.224  c
33.7086 224.057 34.0366 225.187 34.0366 226.613  c
34.0366 227.612 33.8927 228.460 33.6049 229.159  c
33.3172 229.857 32.9501 230.364 32.5036 230.679  c
32.0572 230.994 31.6266 231.152 31.2119 231.152  c
30.3909 231.152 29.7075 230.667 29.1616 229.698  c
28.7003 228.882 28.4697 227.898 28.4697 226.747  c
h
29.7138 226.905 m
29.7138 228.090 29.8598 229.057 30.1518 229.806  c
30.3930 230.437 30.7527 230.752 31.2309 230.752  c
31.4594 230.752 31.6964 230.649 31.9418 230.444  c
32.1873 230.239 32.3735 229.895 32.5004 229.413  c
32.6951 228.685 32.7924 227.659 32.7924 226.334  c
32.7924 225.352 32.6909 224.533 32.4877 223.877  c
32.3354 223.391 32.1386 223.046 31.8974 222.843  c
31.7239 222.703 31.5144 222.633 31.2690 222.633  c
30.9812 222.633 30.7252 222.762 30.5009 223.021  c
30.1962 223.372 29.9889 223.924 29.8789 224.677  c
29.7688 225.431 29.7138 226.173 29.7138 226.905  c
h
36.1250 229.768 m
36.3238 229.768 36.4910 229.837 36.6264 229.974  c
36.7618 230.112 36.8295 230.278 36.8295 230.473  c
36.8295 230.667 36.7608 230.833 36.6232 230.971  c
36.4857 231.109 36.3196 231.177 36.1250 231.177  c
35.9303 231.177 35.7642 231.109 35.6267 230.971  c
35.4891 230.833 35.4204 230.667 35.4204 230.473  c
35.4204 230.274 35.4891 230.107 35.6267 229.971  c
35.7642 229.836 35.9303 229.768 36.1250 229.768  c
h
39.2734 223.236 m
41.3681 222.214 l
41.5776 222.214 l
41.5776 229.482 l
41.5776 229.965 41.5977 230.265 41.6379 230.384  c
41.6781 230.502 41.7617 230.593 41.8886 230.657  c
42.0156 230.720 42.2737 230.756 42.6630 230.765  c
42.6630 231.000 l
39.4257 231.000 l
39.4257 230.765 l
39.8320 230.756 40.0944 230.721 40.2128 230.660  c
40.3313 230.599 40.4139 230.516 40.4604 230.412  c
40.5070 230.309 40.5302 229.999 40.5302 229.482  c
40.5302 224.836 l
40.5302 224.210 40.5091 223.808 40.4668 223.630  c
40.4371 223.495 40.3832 223.395 40.3049 223.332  c
40.2266 223.268 40.1324 223.236 40.0224 223.236  c
39.8658 223.236 39.6479 223.302 39.3686 223.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
49.0000 168.000 m
44.0000 168.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
38.4697 173.747 m
38.4697 172.765 38.6178 171.920 38.9140 171.211  c
39.2102 170.502 39.6038 169.974 40.0947 169.627  c
40.4755 169.352 40.8691 169.214 41.2753 169.214  c
41.9355 169.214 42.5279 169.551 43.0527 170.224  c
43.7086 171.057 44.0366 172.187 44.0366 173.613  c
44.0366 174.612 43.8927 175.460 43.6049 176.159  c
43.3172 176.857 42.9501 177.364 42.5036 177.679  c
42.0572 177.994 41.6266 178.152 41.2119 178.152  c
40.3909 178.152 39.7075 177.667 39.1616 176.698  c
38.7003 175.882 38.4697 174.898 38.4697 173.747  c
h
39.7138 173.905 m
39.7138 175.090 39.8598 176.057 40.1518 176.806  c
40.3930 177.437 40.7527 177.752 41.2309 177.752  c
41.4594 177.752 41.6964 177.649 41.9418 177.444  c
42.1873 177.239 42.3735 176.895 42.5004 176.413  c
42.6951 175.685 42.7924 174.659 42.7924 173.334  c
42.7924 172.352 42.6909 171.533 42.4877 170.877  c
42.3354 170.391 42.1386 170.046 41.8974 169.843  c
41.7239 169.703 41.5144 169.633 41.2690 169.633  c
40.9812 169.633 40.7252 169.762 40.5009 170.021  c
40.1962 170.372 39.9889 170.924 39.8789 171.677  c
39.7688 172.431 39.7138 173.173 39.7138 173.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
49.0000 115.000 m
44.0000 115.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4697 119.747 m
28.4697 118.765 28.6178 117.920 28.9140 117.211  c
29.2102 116.502 29.6038 115.974 30.0947 115.627  c
30.4755 115.352 30.8691 115.214 31.2753 115.214  c
31.9355 115.214 32.5279 115.551 33.0527 116.224  c
33.7086 117.057 34.0366 118.187 34.0366 119.613  c
34.0366 120.612 33.8927 121.460 33.6049 122.159  c
33.3172 122.857 32.9501 123.364 32.5036 123.679  c
32.0572 123.994 31.6266 124.152 31.2119 124.152  c
30.3909 124.152 29.7075 123.667 29.1616 122.698  c
28.7003 121.882 28.4697 120.898 28.4697 119.747  c
h
29.7138 119.905 m
29.7138 121.090 29.8598 122.057 30.1518 122.806  c
30.3930 123.437 30.7527 123.752 31.2309 123.752  c
31.4594 123.752 31.6964 123.649 31.9418 123.444  c
32.1873 123.239 32.3735 122.895 32.5004 122.413  c
32.6951 121.685 32.7924 120.659 32.7924 119.334  c
32.7924 118.352 32.6909 117.533 32.4877 116.877  c
32.3354 116.391 32.1386 116.046 31.8974 115.843  c
31.7239 115.703 31.5144 115.633 31.2690 115.633  c
30.9812 115.633 30.7252 115.762 30.5009 116.021  c
30.1962 116.372 29.9889 116.924 29.8789 117.677  c
29.7688 118.431 29.7138 119.173 29.7138 119.905  c
h
36.1250 122.768 m
36.3238 122.768 36.4910 122.837 36.6264 122.974  c
36.7618 123.112 36.8295 123.278 36.8295 123.473  c
36.8295 123.667 36.7608 123.833 36.6232 123.971  c
36.4857 124.109 36.3196 124.177 36.1250 124.177  c
35.9303 124.177 35.7642 124.109 35.6267 123.971  c
35.4891 123.833 35.4204 123.667 35.4204 123.473  c
35.4204 123.274 35.4891 123.107 35.6267 122.971  c
35.7642 122.836 35.9303 122.768 36.1250 122.768  c
h
39.2734 116.236 m
41.3681 115.214 l
41.5776 115.214 l
41.5776 122.482 l
41.5776 122.965 41.5977 123.265 41.6379 123.384  c
41.6781 123.502 41.7617 123.593 41.8886 123.657  c
42.0156 123.720 42.2737 123.756 42.6630 123.765  c
42.6630 124.000 l
39.4257 124.000 l
39.4257 123.765 l
39.8320 123.756 40.0944 123.721 40.2128 123.660  c
40.3313 123.599 40.4139 123.516 40.4604 123.412  c
40.5070 123.309 40.5302 122.999 40.5302 122.482  c
40.5302 117.836 l
40.5302 117.210 40.5091 116.808 40.4668 116.630  c
40.4371 116.495 40.3832 116.395 40.3049 116.332  c
40.2266 116.268 40.1324 116.236 40.0224 116.236  c
39.8658 116.236 39.6479 116.302 39.3686 116.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
49.0000 61.0000 m
44.0000 61.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4697 66.7470 m
28.4697 65.7653 28.6178 64.9200 28.9140 64.2111  c
29.2102 63.5023 29.6038 62.9744 30.0947 62.6274  c
30.4755 62.3523 30.8691 62.2148 31.2753 62.2148  c
31.9355 62.2148 32.5279 62.5512 33.0527 63.2241  c
33.7086 64.0577 34.0366 65.1876 34.0366 66.6137  c
34.0366 67.6124 33.8927 68.4609 33.6049 69.1591  c
33.3172 69.8574 32.9501 70.3641 32.5036 70.6794  c
32.0572 70.9947 31.6266 71.1523 31.2119 71.1523  c
30.3909 71.1523 29.7075 70.6678 29.1616 69.6987  c
28.7003 68.8820 28.4697 67.8981 28.4697 66.7470  c
h
29.7138 66.9057 m
29.7138 68.0906 29.8598 69.0576 30.1518 69.8066  c
30.3930 70.4371 30.7527 70.7524 31.2309 70.7524  c
31.4594 70.7524 31.6964 70.6498 31.9418 70.4445  c
32.1873 70.2393 32.3735 69.8955 32.5004 69.4130  c
32.6951 68.6852 32.7924 67.6590 32.7924 66.3344  c
32.7924 65.3527 32.6909 64.5338 32.4877 63.8779  c
32.3354 63.3912 32.1386 63.0463 31.8974 62.8432  c
31.7239 62.7036 31.5144 62.6337 31.2690 62.6337  c
30.9812 62.6337 30.7252 62.7628 30.5009 63.0210  c
30.1962 63.3722 29.9889 63.9244 29.8789 64.6777  c
29.7688 65.4309 29.7138 66.1736 29.7138 66.9057  c
h
36.1250 69.7685 m
36.3238 69.7685 36.4910 69.8373 36.6264 69.9748  c
36.7618 70.1123 36.8295 70.2784 36.8295 70.4731  c
36.8295 70.6678 36.7608 70.8339 36.6232 70.9714  c
36.4857 71.1089 36.3196 71.1777 36.1250 71.1777  c
35.9303 71.1777 35.7642 71.1089 35.6267 70.9714  c
35.4891 70.8339 35.4204 70.6678 35.4204 70.4731  c
35.4204 70.2742 35.4891 70.1071 35.6267 69.9716  c
35.7642 69.8362 35.9303 69.7685 36.1250 69.7685  c
h
43.7104 69.3432 m
43.1074 71.0000 l
38.0293 71.0000 l
38.0293 70.7651 l
39.5231 69.4025 40.5747 68.2895 41.1840 67.4262  c
41.7934 66.5629 42.0981 65.7737 42.0981 65.0585  c
42.0981 64.5127 41.9309 64.0641 41.5966 63.7128  c
41.2623 63.3616 40.8624 63.1860 40.3969 63.1860  c
39.9738 63.1860 39.5939 63.3098 39.2575 63.5573  c
38.9211 63.8049 38.6725 64.1678 38.5117 64.6460  c
38.2768 64.6460 l
38.3826 63.8631 38.6545 63.2622 39.0925 62.8432  c
39.5305 62.4243 40.0774 62.2148 40.7334 62.2148  c
41.4316 62.2148 42.0145 62.4391 42.4821 62.8877  c
42.9497 63.3362 43.1835 63.8652 43.1835 64.4746  c
43.1835 64.9104 43.0820 65.3463 42.8789 65.7822  c
42.5657 66.4677 42.0579 67.1935 41.3554 67.9594  c
40.3017 69.1105 39.6437 69.8045 39.3813 70.0415  c
41.6284 70.0415 l
42.0854 70.0415 42.4060 70.0245 42.5900 69.9907  c
42.7741 69.9568 42.9402 69.8881 43.0883 69.7844  c
43.2364 69.6807 43.3655 69.5336 43.4755 69.3432  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
49.0000 8.00000 m
44.0000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4697 13.7470 m
28.4697 12.7653 28.6178 11.9200 28.9140 11.2111  c
29.2102 10.5023 29.6038 9.97444 30.0947 9.62744  c
30.4755 9.35237 30.8691 9.21484 31.2753 9.21484  c
31.9355 9.21484 32.5279 9.55127 33.0527 10.2241  c
33.7086 11.0577 34.0366 12.1876 34.0366 13.6137  c
34.0366 14.6124 33.8927 15.4609 33.6049 16.1591  c
33.3172 16.8574 32.9501 17.3641 32.5036 17.6794  c
32.0572 17.9947 31.6266 18.1523 31.2119 18.1523  c
30.3909 18.1523 29.7075 17.6678 29.1616 16.6987  c
28.7003 15.8820 28.4697 14.8981 28.4697 13.7470  c
h
29.7138 13.9057 m
29.7138 15.0906 29.8598 16.0576 30.1518 16.8066  c
30.3930 17.4371 30.7527 17.7524 31.2309 17.7524  c
31.4594 17.7524 31.6964 17.6498 31.9418 17.4445  c
32.1873 17.2393 32.3735 16.8955 32.5004 16.4130  c
32.6951 15.6852 32.7924 14.6590 32.7924 13.3344  c
32.7924 12.3527 32.6909 11.5338 32.4877 10.8779  c
32.3354 10.3912 32.1386 10.0463 31.8974 9.84326  c
31.7239 9.70361 31.5144 9.63378 31.2690 9.63378  c
30.9812 9.63378 30.7252 9.76285 30.5009 10.0210  c
30.1962 10.3722 29.9889 10.9244 29.8789 11.6777  c
29.7688 12.4309 29.7138 13.1736 29.7138 13.9057  c
h
36.1250 16.7685 m
36.3238 16.7685 36.4910 16.8373 36.6264 16.9748  c
36.7618 17.1123 36.8295 17.2784 36.8295 17.4731  c
36.8295 17.6678 36.7608 17.8339 36.6232 17.9714  c
36.4857 18.1089 36.3196 18.1777 36.1250 18.1777  c
35.9303 18.1777 35.7642 18.1089 35.6267 17.9714  c
35.4891 17.8339 35.4204 17.6678 35.4204 17.4731  c
35.4204 17.2742 35.4891 17.1071 35.6267 16.9716  c
35.7642 16.8362 35.9303 16.7685 36.1250 16.7685  c
h
38.4101 11.0302 m
38.6556 10.4505 38.9655 10.0030 39.3400 9.68774  c
39.7146 9.37247 40.1811 9.21484 40.7397 9.21484  c
41.4295 9.21484 41.9585 9.43912 42.3266 9.88769  c
42.6059 10.2220 42.7456 10.5795 42.7456 10.9604  c
42.7456 11.5867 42.3520 12.2342 41.5649 12.9028  c
42.0939 13.1101 42.4938 13.4064 42.7646 13.7915  c
43.0354 14.1766 43.1709 14.6293 43.1709 15.1499  c
43.1709 15.8946 42.9339 16.5400 42.4599 17.0859  c
41.8421 17.7968 40.9471 18.1523 39.7749 18.1523  c
39.1951 18.1523 38.8005 18.0804 38.5910 17.9365  c
38.3815 17.7926 38.2768 17.6381 38.2768 17.4731  c
38.2768 17.3504 38.3265 17.2425 38.4260 17.1494  c
38.5254 17.0563 38.6450 17.0097 38.7846 17.0097  c
38.8904 17.0097 38.9983 17.0266 39.1084 17.0605  c
39.1803 17.0817 39.3432 17.1589 39.5971 17.2922  c
39.8510 17.4255 40.0266 17.5048 40.1240 17.5302  c
40.2806 17.5768 40.4477 17.6001 40.6254 17.6001  c
41.0571 17.6001 41.4327 17.4329 41.7522 17.0986  c
42.0717 16.7643 42.2314 16.3686 42.2314 15.9116  c
42.2314 15.5773 42.1573 15.2514 42.0092 14.9340  c
41.8992 14.6971 41.7786 14.5172 41.6474 14.3945  c
41.4654 14.2252 41.2158 14.0718 40.8984 13.9343  c
40.5810 13.7967 40.2573 13.7280 39.9272 13.7280  c
39.7241 13.7280 l
39.7241 13.5376 l
40.0584 13.4952 40.3938 13.3746 40.7302 13.1757  c
41.0666 12.9768 41.3110 12.7377 41.4633 12.4585  c
41.6157 12.1792 41.6918 11.8724 41.6918 11.5380  c
41.6918 11.1022 41.5554 10.7499 41.2824 10.4812  c
41.0095 10.2124 40.6699 10.0781 40.2636 10.0781  c
39.6077 10.0781 39.0597 10.4293 38.6196 11.1318  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
0 0 0 RG
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
